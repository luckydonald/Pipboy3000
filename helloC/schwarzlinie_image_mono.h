//
//  schwarzlinie_image_mono.h
//  helloC
//
//  Source File: schwarzlinie.png
//
//  Generated by luckydonald on 13.06.14 16:03:32.
//  Copyright (c) 2014 luckydonald. All rights reserved.
//  luckydonald@flutterb.at
//
//
///Copy Pasta Easy Mode (TM) Stuff:
/* Include Command:
#include "schwarzlinie_image_mono.h"
 */
//
/* Class collection to dynamicly call this object.
struct image_mono schwarzlinie_image_mono;
schwarzlinie_image_mono.has_alpha = SCHWARZLINIE_IMAGE_MONO_HAS_ALPHA;
schwarzlinie_image_mono.height = SCHWARZLINIE_IMAGE_MONO_HEIGHT;
schwarzlinie_image_mono.width = SCHWARZLINIE_IMAGE_MONO_WIDTH;
schwarzlinie_image_mono.data = schwarzlinie_image_mono_data;
 */
//
/* call of insertAt()
insertAt(colorArray, 0, 0, DIM_X, DIM_Y, schwarzlinie_image_mono_data, SCHWARZLINIE_IMAGE_MONO_WIDTH, SCHWARZLINIE_IMAGE_MONO_HEIGHT, 1);
 */
//

#ifndef helloC_schwarzlinie_image_mono_h
#define helloC_schwarzlinie_image_mono_h


typedef unsigned char byte;

#define false   0
#define true    1
#define boolean int

#define SCHWARZLINIE_IMAGE_MONO_WIDTH     10
#define SCHWARZLINIE_IMAGE_MONO_HEIGHT    10
#define SCHWARZLINIE_IMAGE_MONO_HAS_ALPHA true


// 10 x 10 Image (30 x 10 Array with 3 fields per Pixel, in total 300 entries. The encoding uses segments of 3 elements each which are S and L from HSL and Alpha.)
byte schwarzlinie_image_mono_data[300] = {
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,
    0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08,  0x00,0x00,0x08
};

#endif
